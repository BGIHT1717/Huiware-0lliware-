local Library = {}

local function CreateInstance(class, properties)
    local instance = Instance.new(class)
    for property, value in pairs(properties) do
        instance[property] = value
    end
    return instance
end

function Library:CreateWindow()
    local GUI = CreateInstance("ScreenGui", {
        Name = "HuiWare",
        Parent = game.CoreGui,
        ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    })

    local MainFrame = CreateInstance("Frame", {
        Name = "MainFrame",
        Parent = GUI,
        BackgroundColor3 = Color3.fromRGB(25, 25, 25),
        Position = UDim2.new(0, 10, 0, 10),
        Size = UDim2.new(0, 500, 0, 350),
        Active = true,
        Draggable = true,
        BorderSizePixel = 0
    })

    -- Функция для создания HSV цвета
    local function HSVToColor3(h, s, v)
        local h = h % 1
        local s = math.clamp(s, 0, 1)
        local v = math.clamp(v, 0, 1)
        
        local hi = math.floor(h * 6)
        local f = h * 6 - hi
        local p = v * (1 - s)
        local q = v * (1 - f * s)
        local t = v * (1 - (1 - f) * s)
        
        if hi == 0 then return Color3.new(v, t, p)
        elseif hi == 1 then return Color3.new(q, v, p)
        elseif hi == 2 then return Color3.new(p, v, t)
        elseif hi == 3 then return Color3.new(p, q, v)
        elseif hi == 4 then return Color3.new(t, p, v)
        else return Color3.new(v, p, q)
        end
    end

    -- Создаем радужную границу
    local borders = {}
    local borderSize = 2

    -- Верхняя граница
    borders.top = CreateInstance("Frame", {
        Parent = MainFrame,
        BackgroundColor3 = Color3.fromRGB(255, 0, 0),
        Position = UDim2.new(0, -borderSize, 0, -borderSize),
        Size = UDim2.new(1, borderSize * 2, 0, borderSize),
        BorderSizePixel = 0,
        ZIndex = 2
    })

    -- Правая граница
    borders.right = CreateInstance("Frame", {
        Parent = MainFrame,
        BackgroundColor3 = Color3.fromRGB(255, 0, 0),
        Position = UDim2.new(1, 0, 0, -borderSize),
        Size = UDim2.new(0, borderSize, 1, borderSize * 2),
        BorderSizePixel = 0,
        ZIndex = 2
    })

    -- Нижняя граница
    borders.bottom = CreateInstance("Frame", {
        Parent = MainFrame,
        BackgroundColor3 = Color3.fromRGB(255, 0, 0),
        Position = UDim2.new(0, -borderSize, 1, 0),
        Size = UDim2.new(1, borderSize * 2, 0, borderSize),
        BorderSizePixel = 0,
        ZIndex = 2
    })

    -- Левая граница
    borders.left = CreateInstance("Frame", {
        Parent = MainFrame,
        BackgroundColor3 = Color3.fromRGB(255, 0, 0),
        Position = UDim2.new(0, -borderSize, 0, -borderSize),
        Size = UDim2.new(0, borderSize, 1, borderSize * 2),
        BorderSizePixel = 0,
        ZIndex = 2
    })

    -- Анимация границ
    spawn(function()
        local speed = 0.5
        local offset = 0
        while true do
            offset = (offset + speed/60) % 1
            
            local colors = {
                top = HSVToColor3(offset, 1, 1),
                right = HSVToColor3(offset + 0.25, 1, 1),
                bottom = HSVToColor3(offset + 0.5, 1, 1),
                left = HSVToColor3(offset + 0.75, 1, 1)
            }
            
            borders.top.BackgroundColor3 = colors.top
            borders.right.BackgroundColor3 = colors.right
            borders.bottom.BackgroundColor3 = colors.bottom
            borders.left.BackgroundColor3 = colors.left
            
            wait()
        end
    end)

    local Title = CreateInstance("TextLabel", {
        Name = "Title",
        Parent = MainFrame,
        BackgroundColor3 = Color3.fromRGB(20, 20, 20),
        Size = UDim2.new(0, 150, 0, 40),
        Font = Enum.Font.GothamBold,
        Text = "HuiWare",
        TextColor3 = Color3.fromRGB(255, 255, 255),
        TextSize = 22,
        BorderSizePixel = 0
    })

    local TabHolder = CreateInstance("ScrollingFrame", {
        Name = "TabHolder",
        Parent = MainFrame,
        BackgroundColor3 = Color3.fromRGB(20, 20, 20),
        Position = UDim2.new(0, 0, 0, 40),
        Size = UDim2.new(0, 150, 1, -40),
        ScrollBarThickness = 2,
        CanvasSize = UDim2.new(0, 0, 0, 0),
        BorderSizePixel = 0
    })

    local ContentHolder = CreateInstance("Frame", {
        Name = "ContentHolder",
        Parent = MainFrame,
        BackgroundColor3 = Color3.fromRGB(30, 30, 30),
        Position = UDim2.new(0, 150, 0, 0),
        Size = UDim2.new(1, -150, 1, 0),
        BorderSizePixel = 0
    })

    local UIListLayout = CreateInstance("UIListLayout", {
        Parent = TabHolder,
        SortOrder = Enum.SortOrder.LayoutOrder,
        Padding = UDim.new(0, 0)
    })

    local ToggleButton = CreateInstance("TextButton", {
        Name = "ToggleUI",
        Parent = GUI,
        BackgroundColor3 = Color3.fromRGB(25, 25, 25),
        Position = UDim2.new(1, -60, 1, -60),
        Size = UDim2.new(0, 50, 0, 50),
        Font = Enum.Font.GothamBold,
        Text = "T",
        TextColor3 = Color3.fromRGB(255, 255, 255),
        TextSize = 18,
        BorderSizePixel = 0
    })

    ToggleButton.MouseButton1Click:Connect(function()
        MainFrame.Visible = not MainFrame.Visible
    end)

    local TabLibrary = {}
    
    function TabLibrary:CreateTab(name)
        local Tab = CreateInstance("TextButton", {
            Name = name,
            Parent = TabHolder,
            BackgroundColor3 = Color3.fromRGB(25, 25, 25),
            Size = UDim2.new(1, 0, 0, 35),
            Font = Enum.Font.Gotham,
            Text = "  "..name,
            TextColor3 = Color3.fromRGB(255, 255, 255),
            TextSize = 14,
            TextXAlignment = Enum.TextXAlignment.Left,
            AutoButtonColor = false,
            BorderSizePixel = 0
        })

        local TabIndicator = CreateInstance("Frame", {
            Name = "Indicator",
            Parent = Tab,
            BackgroundColor3 = Color3.fromRGB(255, 0, 0),
            Position = UDim2.new(0, 0, 0, 0),
            Size = UDim2.new(0, 2, 1, 0),
            Visible = false,
            BorderSizePixel = 0
        })

        local TabContent = CreateInstance("ScrollingFrame", {
            Name = name.."Content",
            Parent = ContentHolder,
            BackgroundTransparency = 1,
            Position = UDim2.new(0, 10, 0, 10),
            Size = UDim2.new(1, -20, 1, -20),
            Visible = false,
            ScrollBarThickness = 4,
            CanvasSize = UDim2.new(0, 0, 0, 0)
        })

        local ContentList = CreateInstance("UIListLayout", {
            Parent = TabContent,
            SortOrder = Enum.SortOrder.LayoutOrder,
            Padding = UDim.new(0, 8)
        })

        Tab.MouseButton1Click:Connect(function()
            for _, otherTab in pairs(TabHolder:GetChildren()) do
                if otherTab:IsA("TextButton") then
                    otherTab.Indicator.Visible = false
                    otherTab.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
                    otherTab.TextColor3 = Color3.fromRGB(255, 255, 255)
                end
            end
            TabIndicator.Visible = true
            Tab.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
            Tab.TextColor3 = Color3.fromRGB(255, 255, 255)

            for _, content in pairs(ContentHolder:GetChildren()) do
                if content:IsA("ScrollingFrame") then
                    content.Visible = false
                end
            end
            TabContent.Visible = true
        end)

        local ElementLibrary = {}

        function ElementLibrary:CreateButton(text, callback)
            local Button = CreateInstance("TextButton", {
                Parent = TabContent,
                BackgroundColor3 = Color3.fromRGB(35, 35, 35),
                Size = UDim2.new(1, 0, 0, 35),
                Font = Enum.Font.Gotham,
                Text = text,
                TextColor3 = Color3.fromRGB(255, 255, 255),
                TextSize = 14,
                BorderSizePixel = 0
            })

            Button.MouseEnter:Connect(function()
                Button.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
            end)

            Button.MouseLeave:Connect(function()
                Button.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
            end)

            Button.MouseButton1Click:Connect(callback or function() end)
            return Button
        end

        function ElementLibrary:CreateToggle(text, callback)
            local ToggleFrame = CreateInstance("Frame", {
                Parent = TabContent,
                BackgroundColor3 = Color3.fromRGB(35, 35, 35),
                Size = UDim2.new(1, 0, 0, 35),
                BorderSizePixel = 0
            })

            local ToggleButton = CreateInstance("TextButton", {
                Parent = ToggleFrame,
                BackgroundColor3 = Color3.fromRGB(255, 0, 0),
                Position = UDim2.new(0, 10, 0.5, -10),
                Size = UDim2.new(0, 20, 0, 20),
                Text = "",
                BorderSizePixel = 0
            })

            local ToggleText = CreateInstance("TextLabel", {
                Parent = ToggleFrame,
                BackgroundTransparency = 1,
                Position = UDim2.new(0, 40, 0, 0),
                Size = UDim2.new(1, -50, 1, 0),
                Font = Enum.Font.Gotham,
                Text = text,
                TextColor3 = Color3.fromRGB(255, 255, 255),
                TextSize = 14,
                TextXAlignment = Enum.TextXAlignment.Left
            })

            local toggled = false
            
            ToggleButton.MouseButton1Click:Connect(function()
                toggled = not toggled
                ToggleButton.BackgroundColor3 = toggled and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(255, 0, 0)
                if callback then
                    callback(toggled)
                end
            end)

            return ToggleFrame
        end

        function ElementLibrary:CreateLabelButton(text, labelText)
            local Button = ElementLibrary:CreateButton(text, function()
                local PopupFrame = CreateInstance("Frame", {
                    Parent = GUI,
                    BackgroundColor3 = Color3.fromRGB(30, 30, 30),
                    Position = UDim2.new(0.5, -200, 0.5, -150),
                    Size = UDim2.new(0, 400, 0, 300),
                    BorderSizePixel = 0
                })

                local PopupTitle = CreateInstance("TextLabel", {
                    Parent = PopupFrame,
                    BackgroundColor3 = Color3.fromRGB(25, 25, 25),
                    Size = UDim2.new(1, 0, 0, 30),
                    Font = Enum.Font.GothamBold,
                    Text = text,
                    TextColor3 = Color3.fromRGB(255, 255, 255),
                    TextSize = 16,
                    BorderSizePixel = 0
                })

                local CloseButton = CreateInstance("TextButton", {
                    Parent = PopupFrame,
                    BackgroundColor3 = Color3.fromRGB(255, 0, 0),
                    Position = UDim2.new(1, -25, 0, 5),
                    Size = UDim2.new(0, 20, 0, 20),
                    Font = Enum.Font.GothamBold,
                    Text = "X",
                    TextColor3 = Color3.fromRGB(255, 255, 255),
                    TextSize = 14,
                    BorderSizePixel = 0
                })

                local LabelContent = CreateInstance("TextLabel", {
                    Parent = PopupFrame,
                    BackgroundTransparency = 1,
                    Position = UDim2.new(0, 10, 0, 40),
                    Size = UDim2.new(1, -20, 1, -50),
                    Font = Enum.Font.Gotham,
                    Text = labelText,
                    TextColor3 = Color3.fromRGB(255, 255, 255),
                    TextSize = 14,
                    TextXAlignment = Enum.TextXAlignment.Left,
                    TextYAlignment = Enum.TextYAlignment.Top,
                    TextWrapped = true
                })

                CloseButton.MouseButton1Click:Connect(function()
                    PopupFrame:Destroy()
                end)
            end)
            return Button
        end

        ContentList:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
            TabContent.CanvasSize = UDim2.new(0, 0, 0, ContentList.AbsoluteContentSize.Y + 10)
        end)

        UIListLayout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
            TabHolder.CanvasSize = UDim2.new(0, 0, 0, UIListLayout.AbsoluteContentSize.Y + 10)
        end)

        return ElementLibrary
    end

    return TabLibrary
end

return Library
